<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
      <context:annotation-config/>
      <context:component-scan base-package="user" />
		<aop:aspectj-autoproxy proxy-target-class="true"/>

 	<!-- 找到配置文件 -->
  	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	        <value>classpath:jdbc.properties</value>
	    </property>
	</bean>	
	
	<!-- 配置数据源 -->
	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
    </bean>
	 
	 <!-- 引入hibernate，指定hibernate配置 ，把sessionfactory交给spring管理 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
     	<property name="packagesToScan">
			<list>
		        <value>user.model</value>
		    </list>
    	</property>
    	<property name="hibernateProperties">
	    	<props>
	        	<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	        	<prop key="hibernate.show_sql">true</prop>
	    	</props>
	    </property>
  	</bean>
   
   <!-- 事务管理 --> 
   	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  	 	<property name="sessionFactory" ref="sessionFactory" />
   	</bean>
   
   	<!-- 注解的方式声明事务，但是需要在sevice层写注解 -->
	<tx:annotation-driven transaction-manager="txManager"/>

<!-- xml 方式声明事务 --><!-- 
	<aop:config>
		<aop:pointcut expression="execution(public * user.service..*.*(..))" id="addcut"/>
		<aop:advisor advice-ref="tx-advice" pointcut-ref="addcut" />
	</aop:config>
	
	
	<tx:advice id="tx-advice" transaction-manager="txManager">
  		<tx:attributes>
  			<tx:method name="serviceQueryExist" read-only="true"/>
    		<tx:method name="serviceAddUser" propagation="REQUIRED"/>
  		</tx:attributes>
	</tx:advice>
 -->
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
</beans>